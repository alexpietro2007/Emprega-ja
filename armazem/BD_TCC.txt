CREATE DATABASE db_empregaJa
USE db_empregaJa
GO

-- TABELA USUARIO --
CREATE TABLE tbUsuario(
    idUsuario        INT NOT NULL IDENTITY(1,1),
    nomeUsuario      VARCHAR(100) NOT NULL,
    cpfUsuario       CHAR(11) NOT NULL,
    dataNascUsuario  DATE NOT NULL,
    sexoUsuario      CHAR(1) NOT NULL,
    fotoUsuario      VARCHAR(255) NOT NULL,
    emailUsuario     VARCHAR(100) NOT NULL,
    telefoneUsuario  VARCHAR(20) NOT NULL,
    senhaUsuario     VARCHAR(255) NOT NULL,

    PRIMARY KEY (idUsuario)
);

-- TABELA EMPRESA --
CREATE TABLE tbEmpresa(
    idEmpresa       INT NOT NULL IDENTITY(1,1),
    nomeEmpresa     VARCHAR(150) NOT NULL,
    cnpjEmpresa     CHAR(14) NOT NULL,
    setorEmpresa    VARCHAR(100) NOT NULL,
    emailEmpresa    VARCHAR(100) NOT NULL,
    telefoneEmpresa VARCHAR(20) NOT NULL,
    logoEmpresa     VARCHAR(255) NOT NULL,
    siteEmpresa     VARCHAR(150) NOT NULL,
    senhaEmpresa    VARCHAR(255) NOT NULL,

    PRIMARY KEY (idEmpresa)
);

-- TABELA ADMINISTRADOR --
CREATE TABLE tbAdmin(
    idAdmin     INT NOT NULL IDENTITY(1,1),
    loginAdmin  VARCHAR(50) NOT NULL,
    senhaAdmin  VARCHAR(255) NOT NULL,

    PRIMARY KEY (idAdmin)
);

-- TABELA TURNO --
CREATE TABLE tbTurno(
    idTurno        INT NOT NULL IDENTITY(1,1),
    descricaoTurno VARCHAR(50) NOT NULL,

    PRIMARY KEY (idTurno)
);

-- TABELA ESCOLARIDADE --
CREATE TABLE tbEscolaridade(
    idEscolaridade       INT NOT NULL IDENTITY(1,1),
    descricaoEscolaridade VARCHAR(100) NOT NULL,

    PRIMARY KEY (idEscolaridade)
);

-- TABELA REGIME --
CREATE TABLE tbRegime(
    idRegime       INT NOT NULL IDENTITY(1,1),
    descricaoRegime VARCHAR(100) NOT NULL,

    PRIMARY KEY (idRegime)
);

-- TABELA VAGA --
CREATE TABLE tbVaga(
    idVaga            INT NOT NULL IDENTITY(1,1),
    tituloVaga        VARCHAR(100) NOT NULL,
    descricaoVaga     VARCHAR(500) NOT NULL,
    localizacaoVaga   VARCHAR(150) NOT NULL,
    salarioVaga       DECIMAL(10,2) NOT NULL,
    statusVaga        VARCHAR(20) NOT NULL,
    dataInicioVaga    DATE NOT NULL,
    dataFechamentoVaga DATE NOT NULL,
    idTurno           INT NOT NULL,
    idRegime          INT NOT NULL,
    idEscolaridade    INT NOT NULL,
    idEmpresa         INT NOT NULL,

    PRIMARY KEY (idVaga),
    FOREIGN KEY (idTurno) REFERENCES tbTurno(idTurno),
    FOREIGN KEY (idRegime) REFERENCES tbRegime(idRegime),
    FOREIGN KEY (idEscolaridade) REFERENCES tbEscolaridade(idEscolaridade),
    FOREIGN KEY (idEmpresa) REFERENCES tbEmpresa(idEmpresa)
);

-- TABELA REPRESENTANTE --
CREATE TABLE tbRepresentante(
    idRepresentante       INT NOT NULL IDENTITY(1,1),
    nomeRepresentante     VARCHAR(100) NOT NULL,
    cpfRepresentante      CHAR(11) NOT NULL,
    emailRepresentante    VARCHAR(100) NOT NULL,
    telefoneRepresentante VARCHAR(20) NOT NULL,
    senhaRepresentante    VARCHAR(255) NOT NULL,
    idEmpresa             INT NOT NULL,
    idVaga                INT NOT NULL,

    PRIMARY KEY (idRepresentante),
    FOREIGN KEY (idEmpresa) REFERENCES tbEmpresa(idEmpresa),
    FOREIGN KEY (idVaga) REFERENCES tbVaga(idVaga)
);

-- TABELA CANDIDATURA --
CREATE TABLE tbCandidatura(
    idCandidatura     INT NOT NULL IDENTITY(1,1),
    statusCandidatura VARCHAR(20) NOT NULL,
    dataCandidatura   DATETIME NOT NULL,
    idUsuario         INT NOT NULL,
    idVaga            INT NOT NULL,

    PRIMARY KEY (idCandidatura),
    FOREIGN KEY (idUsuario) REFERENCES tbUsuario(idUsuario),
    FOREIGN KEY (idVaga) REFERENCES tbVaga(idVaga)
);

-- TABELA HABILIDADE --
CREATE TABLE tbHabilidade(
    idHabilidade INT NOT NULL IDENTITY(1,1),
    descricaoHabilidade VARCHAR(100) NOT NULL,

    PRIMARY KEY (idHabilidade)
);

-- TABELA CURRICULO --
CREATE TABLE tbCurriculo(
    idCurriculo    INT NOT NULL IDENTITY(1,1),
    idUsuario      INT NOT NULL,
    idTurno        INT NOT NULL,
    idEscolaridade INT NOT NULL,
    idRegime       INT NOT NULL,

    PRIMARY KEY (idCurriculo),
    FOREIGN KEY (idUsuario) REFERENCES tbUsuario(idUsuario),
    FOREIGN KEY (idTurno) REFERENCES tbTurno(idTurno),
    FOREIGN KEY (idEscolaridade) REFERENCES tbEscolaridade(idEscolaridade),
    FOREIGN KEY (idRegime) REFERENCES tbRegime(idRegime)
);

